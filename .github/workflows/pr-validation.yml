name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]

env:
  NODE_ENV: test

jobs:
  pr-quality-gates:
    name: Pull Request Quality Gates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install dependencies
        run: |
          cd server
          npm ci --prefer-offline --no-audit
      
      - name: TypeScript type checking
        run: |
          cd server
          npm run typecheck
      
      - name: Build validation
        run: |
          cd server
          npm run build
      
      - name: Test execution
        run: |
          cd server
          npm test
        timeout-minutes: 3
      
      - name: CAGEERF Framework validation
        run: |
          cd server
          echo "Validating CAGEERF framework integration..."
          
          # Check if CAGEERF modules compile
          if [ -f "dist/utils/cageerf-analyzer.js" ]; then
            echo "✅ CAGEERF Analyzer compiled"
          else
            echo "❌ CAGEERF Analyzer compilation failed"
            exit 1
          fi
          
          if [ -f "dist/utils/template-generator.js" ]; then
            echo "✅ Template Generator compiled"
          else
            echo "❌ Template Generator compilation failed"
            exit 1
          fi
          
          if [ -f "dist/utils/template-repository.js" ]; then
            echo "✅ Template Repository compiled"
          else
            echo "❌ Template Repository compilation failed"
            exit 1
          fi
      
      - name: MCP Tools validation
        run: |
          cd server
          echo "Validating MCP Tools integration..."
          
          # Check if MCP tools compile
          if [ -f "dist/mcp-tools/template-generation-tools.js" ]; then
            echo "✅ Template Generation MCP Tools compiled"
          else
            echo "❌ Template Generation MCP Tools compilation failed"
            exit 1
          fi
          
          if [ -f "dist/mcp-tools/workflow-management-tools.js" ]; then
            echo "✅ Workflow Management MCP Tools compiled"
          else
            echo "❌ Workflow Management MCP Tools compilation failed"
            exit 1
          fi
      
      - name: Server startup validation
        run: |
          cd server
          echo "Testing server startup capability..."
          timeout 15s npm run start:debug > startup.log 2>&1 &
          SERVER_PID=$!
          sleep 10
          
          if kill -0 $SERVER_PID 2>/dev/null; then
            echo "✅ Server started successfully"
            kill $SERVER_PID
          else
            echo "❌ Server failed to start"
            cat startup.log
            exit 1
          fi
      
      - name: Changed files analysis
        run: |
          echo "Analyzing changed files in this PR..."
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          
          echo "Files changed in this PR:"
          cat changed_files.txt
          
          # Check if TypeScript files were modified
          if grep -q "\.ts$" changed_files.txt; then
            echo "✅ TypeScript files modified - validation completed"
          fi
          
          # Check if CAGEERF files were modified
          if grep -q "cageerf\|template-generator\|template-repository" changed_files.txt; then
            echo "⚠️  CAGEERF framework files modified - ensure compatibility"
          fi
          
          # Check if MCP tools were modified
          if grep -q "mcp-tools" changed_files.txt; then
            echo "⚠️  MCP tools modified - ensure protocol compliance"
          fi
      
      - name: Comment PR with validation results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let changedFiles = '';
            
            try {
              changedFiles = fs.readFileSync('changed_files.txt', 'utf8');
            } catch (e) {
              changedFiles = 'Unable to read changed files';
            }
            
            const status = process.env.GITHUB_JOB_STATUS || '${{ job.status }}';
            const runUrl = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
            
            let message = '';
            if (status === 'success') {
              message = `## ✅ PR Validation Passed!
              
**All quality gates have passed for this pull request.**

### Validation Summary:
- ✅ TypeScript compilation successful
- ✅ Build process completed
- ✅ All tests passed
- ✅ CAGEERF framework validation successful
- ✅ MCP Tools integration verified
- ✅ Server startup validation completed

### Files Changed:
\`\`\`
${changedFiles}
\`\`\`

[View detailed results](${runUrl})`;
            } else {
              message = `## ❌ PR Validation Failed
              
**Quality gates failed for this pull request.**

Please check the [detailed logs](${runUrl}) and fix the issues before merging.

### Files Changed:
\`\`\`
${changedFiles}
\`\`\`

**Common fixes:**
- Run \`cd server && npm run typecheck\` locally
- Run \`cd server && npm run build\` locally
- Run \`cd server && npm test\` locally
- Ensure all CAGEERF modules compile correctly`;
            }
            
            // Check if a comment already exists
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Validation')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: message
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }

  compatibility-check:
    name: Compatibility Check
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install dependencies
        run: |
          cd server
          npm ci --prefer-offline --no-audit
      
      - name: Build and test
        run: |
          cd server
          npm run build
          npm test
      
      - name: Check for breaking changes
        run: |
          echo "Checking for potential breaking changes..."
          
          # Check if main entry points exist
          if [ ! -f "server/dist/index.js" ]; then
            echo "❌ Main entry point missing"
            exit 1
          fi
          
          # Check if package.json is valid
          cd server
          if ! npm run --silent > /dev/null 2>&1; then
            echo "❌ npm scripts validation failed"
            exit 1
          fi
          
          echo "✅ No breaking changes detected"